version: "3.8"

services:
  # vLLM Triton Backend for serving OPT-125M
  triton:
    image: nvcr.io/nvidia/tritonserver:25.03-vllm-python-py3
    container_name: triton-opt-server
    restart: unless-stopped
    ports:
      - "8000:8000" # HTTP endpoint
      - "8001:8001" # gRPC endpoint
      - "8002:8002" # Metrics endpoint
    volumes:
      - ./model_repository:/models
    environment:
      - PYTHONUNBUFFERED=1
      - CUDA_VISIBLE_DEVICES=""
      - VLLM_TARGET_DEVICE=cpu
    command: [
        "tritonserver",
        "--model-repository=/models",
        "--allow-metrics=true",
        "--metrics-interval-ms=1000",
        "--log-verbose=1",
        # "--cpu-only=1", # Force CPU-only mode
      ]
    networks:
      - monitoring_network

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--storage.tsdb.retention.time=15d"
    networks:
      - monitoring_network

  # Grafana for dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - monitoring_network
    depends_on:
      - prometheus

networks:
  monitoring_network:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data:
